{
  "dependencies": {
    "use-reducer-logger": "^1.0.2"
  },
  "name": "project1",
  "description": "4.Create Git-repository\r 6.Add routing\r 6.1.npm i react-router-dom\r 6.2.create route for home screen\r 6.3.create router for product screen\r 7.Created route for homescreen and productscreen,\r Create Node.js Server\r 7.1.run npm init in root folder\r 7.2.Update package.json set type: module\r 7.3.Add .js to imports\r 7.4.npm install express\r 7.5.create server.js\r 7.6.add start command as node backend/server.js\r 7.7.require express\r 7.8.create route for / return backend is ready\r 7.9.move product.js from frontend to backend\r 7.10.create route for /api/products\r 7.11.return products\r 7.12.run npm start\r 8.Fetch products from Backend\r 8.1. set proxy in package.json\r 8.2 npm install axios\r 8.3 use state hook\r 8.4 use effect hook\r 8.5 use reducer hook\r 9.Manage state by reducer hook(replacing useState hook with reducer)\r 9.1.define reducer\r 9.2.update fetch data\r 9.3.get state from useReducer\r 10.Add bootstrap UI framework\r 10.1.npm insttall react-bootstrap bootstrap\r 10.2.update App.js\r 11.Creating Product component\r 12.Create Product Details Screen\r 12.1.Fetch Product from Backend\r 12.2.Create 3 columns for image,info and action\r 13.Creating custom loading style//to be done\r 14.Implementing Add to Cart\r 14.1.Create React Context\r 14.2.define Reducer\r 14.3.create Store Provider\r 14.4.Implement add to cart button click handler\r 15.Complete Add to Cart\r 15.1.check exist item in the cart\r 15.2.check count in stock in backend\r 16.Create cart screen\r 16.1.create 2 columns\r 16.2.displat items list\r 16.3.create action column\r 17.Complete cart screen\r 17.1.click handler for inc/dec item\r 17.2.click handler for remove item\r 17.3.click handler for checkout\r 18.Create Signin Screen\r 18.1.create signin form\r 18.2.add email and password\r 18.3.add signin button\r 19.Connect to Mongodb database\r 19.1.create atlas mongodb database\r 19.2.install local mongodb databse\r 19.3.npm install mongoose\r 19.4.connect to mongodb database\r 20.Seed sample data to mongodb database\r 20.1.create product model\r 20.2.create user model\r 20.3.create seed route\r 20.4.use route in server.js\r 20.5.seed sample product\r 21.seed Sample Users\r 21.1.create user model\r 21.2.seed sample users\r 21.3.create user routes\r 22.crete signin backend api\r 22.1.create signin api\r 22.2.npm install json webtoken\r 22.3.define generate token\r 23.complete Sigin screen\r 23.1.handel submit action\r 23.2.save token in store and local storage\r 23.3.show user name in header\r 24.create shipping screen\r 24.1.create form inputs\r 24.2.handle save shipping address\r 24.3.add checkout wizard bar\r 25.Create Signup screen\r 25.1.create input forms\r 25.2.handle submit\r 25.3.create backend api\r 26.Implement Select Payment method screen\r 26.1.create input forms\r 26.2.handle submit\r 27.Create Place Order Screen\r 27.1.show cart items,payment method and address\r 27.2.create order create api\r 27.3.calculate order summary\r 28.Implement Place order action\r 28.1.handle place order action\r 28.2.create order create api\r 29.create order screen\r 29.1.create backend api for order/:id\r 29.2.fetch order api in frontend\r 29.3.shoe order information in 2 columns\r 30.Pay order by paypal\r 30.1.generate paypal client id\r 30.2.create api to return client id\r 30.3.install react-paypal-js\r 30.4.use PayPalScriptProvider in index.js\r 30.5.use PayPalSccriptReducer in order screen\r 30.6.implement loadPaypalScript function\r 30.7.render paypal button\r 30.8.implement onApprove payment function\r 30.9.create pay order api in backend\r 31.Display order history\r 31.1.create orderhistory screen\r 31.2.create order history api\r 31.3.use api in the front end\r 32.Create Profile Screen\r 32.1.get user info from context\r 32.2.show user information\r 32.3.create user update api\r 32.4.update user info",
  "version": "1.0.0",
  "main": "index.js",
  "devDependencies": {},
  "scripts": {
    "build": "cd backend && npm install  && cd ../tiger-crackers && npm install && npm run build",
    "start": "node backend/server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC"
}
